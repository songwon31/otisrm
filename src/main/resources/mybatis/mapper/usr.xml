<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.finalteam5.otisrm.dao.UsrDao">
	<!-- 회원가입 폼 -->
	<!-- 기관(inst) 목록 불러오기 -->
	<select id="selectInstList"  resultType="Inst">
	       select * from inst order by inst_no desc		 
    </select>
	<!--가입 권한(UserAuthrt) 목록 불러오기 -->
	<select id="selectUsrAuthrtList"  resultType="UsrAuthrt">
	        select * from usr_authrt		 
    </select>
	<!--기관에 해당하는 개발부서 목록 불러오기 -->
	<select id="selectDeptListByInstNo" parameterType="String" resultType="Dept">
	       select * from dept
	       <if test="instNo != null">
	       		where inst_no = #{instNo}
	       </if>
    </select>
	<!--기관에 해당하는 직위 목록 불러오기 -->
	<select id="selectIbpsListByInstNo" parameterType="String" resultType="Ibps">
	       select * from ibps
	       <if test="instNo != null">
	       		where inst_no = #{instNo}
	       </if>
    </select>
	<!--기관에 해당하는 역할 목록 불러오기 -->
	<select id="selectRoleListByInstNo" parameterType="String" resultType="Role">
	       select * from role
	       <if test="instNo != null">
	       		where inst_no = #{instNo}
	       </if>
    </select>
	<!--아이디 중복검사 -->
	<select id="selectNumOfOverlapUsrId" parameterType="String" resultType="int">
	       select count(*) from usr where usr_id = #{usrId}
    </select>
    <!-- 회원가입 폼 제출  -->
    <insert id="insertUsr" parameterType="Usr">
	    <![CDATA[
	     DECLARE
	        l_generated_usr_no VARCHAR2(6);
	     BEGIN
	     	l_generated_usr_no := 'US' || LPAD(TO_CHAR(FLOOR(DBMS_RANDOM.VALUE(1000, 10000))), 4, '0');
		    INSERT INTO usr(
		        USR_NO, USR_ID, USR_PSWD, USR_NM, USR_RRNO, USR_TELNO, USR_EML, INST_NO,
		        DEPT_NO, IBPS_NO, ROLE_NO, USR_AUTHRT_NO, USR_STTS_NO, LGN_FAIL_CNT,
		        RPRS_IMG, USR_JOIN_DT, USR_WHDWL_DT
		    ) values(
		       l_generated_usr_no, #{usrId}, #{usrPswd}, #{usrNm},#{usrRrno},#{usrTelno},#{usrEml},#{instNo}, 
		        #{deptNo}, #{ibpsNo}, #{roleNo}, #{usrAuthrtNo},'PENDING', 0, null, sysdate, null
		    );
		 END;
 		]]>
	</insert>
    
    <!-- 로그인 폼 -->
	<select id="selectByUsrId" parameterType="String" resultType="Login">
		select u.usr_no, u.usr_nm, u.usr_authrt_no, u.usr_id, u.usr_pswd, u.usr_stts_no, u.rprs_img, a.usr_authrt_nm
		from usr u
		join usr_authrt a on u.usr_authrt_no = a.usr_authrt_no
		where usr_Id = #{usrId}		 
    </select>
    <!--
      	로그인 틀린 횟수 업데이트
	<update id="updateLgnFailCnt" parameterType="String">
	    UPDATE users
	    SET lgn_fail_cnt = lgn_fail_cnt + 1
	    WHERE usr_id = #{usr_id}
	</update>
	
	<update id="resetLgnFailCnt" parameterType="String">
	    UPDATE users
	    SET login_failure_count = 0
	    WHERE usr_id = #{usr_id}
	</update>
	 -->
    
    <!-- 작성자: 송원석 /사용자 상태(UsrStts) 목록 불러오기 -->
    <select id="selectUsrSttsList" resultType="UsrStts">
	 	select * from usr_stts
    </select>
    
    <!-- 작성자: 송원석 , 성유짱/usrId를 통해 사용자 테이블 정보 불러오기 -->
    <select id="selectUsrDetailsByUsrId" parameterType="String" resultType="Usr">
    	select u.usr_no, u.usr_id, u.usr_pswd, u.usr_nm, u.usr_rrno, u.usr_telno, u.usr_eml,
    		u.inst_no, u.dept_no, u.ibps_no, u.role_no, u.usr_authrt_no, u.usr_stts_no, 
    		u.lgn_fail_cnt, u.usr_join_dt, u.usr_whdwl_dt, a.usr_authrt_nm, i.inst_nm
    	from usr u
    	join usr_authrt a on u.usr_authrt_no = a.usr_authrt_no
    	join inst i on u.inst_no = i.inst_no
		where usr_Id = #{usrId}		 
    </select>
    
    <!-- 사용자 관리 페이지 구성 -->
    <select id="countUsrForUsrManagementBoard" parameterType="com.finalteam5.otisrm.dto.usr.UsrManagementSearch" resultType="int">
    	SELECT COUNT(*)
    	FROM (
	    	SELECT usr.usr_no, usr.usr_nm, usr.usr_telno, usr.usr_eml, inst.inst_nm, dept.dept_nm, 
	    		   role.role_nm, usr_authrt.usr_authrt_nm, usr_stts.usr_stts_nm, usr.usr_join_dt
	    	FROM usr
	    	JOIN inst ON usr.inst_no = inst.inst_no
	    	JOIN dept ON usr.dept_no = dept.dept_no
	    	JOIN role ON usr.role_no = role.role_no
	    	JOIN usr_authrt ON usr.usr_authrt_no = usr_authrt.usr_authrt_no
	    	JOIN usr_stts ON usr.usr_stts_no = usr_stts.usr_stts_no
	    	<where>
	    		<if test="usrAuthrt != null">
					usr.usr_authrt_no = #{usrAuthrt}
				</if>
				<if test="usrStts != null">
					AND usr.usr_stts_no = #{usrStts} 
				</if>
				<if test="keywordContent != null">
					<if test="keywordCategory == 'usrNm'">
						AND usr.usr_nm like '%' || #{keywordContent} || '%'
					</if>
					<if test="keywordCategory == 'usrTelno'">
						AND usr.usr_telno like '%' || #{keywordContent} || '%'
					</if>
					<if test="keywordCategory == 'usrEml'">
						AND usr.usr_eml like '%' || #{keywordContent} || '%'
					</if>
				</if>
				<if test="usrInst != null">
					AND usr.inst_no = #{usrInst}
				</if>
				<if test="usrDept != null">
					AND usr.dept_no = #{usrDept}
				</if>
				<!-- 시작 날짜만 있는 경우 -->
				<if test="joinDateStart != null and joinDateEnd == null">
					<![CDATA[
					AND usr.usr_join_dt >= #{joinDateStart}	
					]]>
				</if>
				<!-- 시작 날짜와 끝 날짜 모두 있는 경우 -->
				<if test="joinDateStart != null and joinDateEnd != null">
					<![CDATA[
					AND usr.usr_join_dt >= #{joinDateStart}	
					AND usr.usr_join_dt <= #{joinDateEnd}
					]]>
				</if>
				<!-- 끝 날짜만 있는 경우 -->
				<if test="joinDateStart == null and joinDateEnd != null">
					<![CDATA[
					AND usr.usr_join_dt <= #{joinDateEnd}
					]]>
				</if>
    	</where>
    		)
    </select>
    
    <select id="selectUsrForUsrManagementBoard" parameterType="map" resultType="com.finalteam5.otisrm.dto.usr.UsrForUsrManagementBoard">
    	SELECT rnum, usr_no, usr_nm, usr_telno, usr_eml, inst_nm, dept_nm, 
			   role_nm, usr_authrt_nm, usr_stts_nm, usr_join_dt
		FROM(
			SELECT rownum as rnum, usr_no, usr_nm, usr_telno, usr_eml, inst_nm, dept_nm, 
				   role_nm, usr_authrt_nm, usr_stts_nm, usr_join_dt
			FROM (
		    	SELECT usr.usr_no, usr.usr_nm, usr.usr_telno, usr.usr_eml, inst.inst_nm, dept.dept_nm, 
			    		   role.role_nm, usr_authrt.usr_authrt_nm, usr_stts.usr_stts_nm, usr.usr_join_dt
			    	FROM usr
			    	JOIN inst ON usr.inst_no = inst.inst_no
			    	JOIN dept ON usr.dept_no = dept.dept_no
			    	JOIN role ON usr.role_no = role.role_no
			    	JOIN usr_authrt ON usr.usr_authrt_no = usr_authrt.usr_authrt_no
			    	JOIN usr_stts ON usr.usr_stts_no = usr_stts.usr_stts_no
			    	<where>
			    		<if test="usrManagementSearch.usrAuthrt != null">
							usr.usr_authrt_no = #{usrManagementSearch.usrAuthrt}
						</if>
						<if test="usrManagementSearch.usrStts != null">
							AND usr.usr_stts_no = #{usrManagementSearch.usrStts} 
						</if>
						<if test="usrManagementSearch.keywordContent != null">
							<if test="usrManagementSearch.keywordCategory == 'usrNm'">
								AND usr.usr_nm like '%' || #{usrManagementSearch.keywordContent} || '%'
							</if>
							<if test="usrManagementSearch.keywordCategory == 'usrTelno'">
								AND usr.usr_telno like '%' || #{usrManagementSearch.keywordContent} || '%'
							</if>
							<if test="usrManagementSearch.keywordCategory == 'usrEml'">
								AND usr.usr_eml like '%' || #{usrManagementSearch.keywordContent} || '%'
							</if>
						</if>
						<if test="usrManagementSearch.usrInst != null">
							AND usr.inst_no = #{usrManagementSearch.usrInst}
						</if>
						<if test="usrManagementSearch.usrDept != null">
							AND usr.dept_no = #{usrManagementSearch.usrDept}
						</if>
						<!-- 시작 날짜만 있는 경우 -->
						<if test="usrManagementSearch.joinDateStart != null and usrManagementSearch.joinDateEnd == null">
							<![CDATA[
							AND usr.usr_join_dt >= #{usrManagementSearch.joinDateStart}	
							]]>
						</if>
						<!-- 시작 날짜와 끝 날짜 모두 있는 경우 -->
						<if test="usrManagementSearch.joinDateStart != null and usrManagementSearch.joinDateEnd != null">
							<![CDATA[
							AND usr.usr_join_dt >= #{usrManagementSearch.joinDateStart}	
							AND usr.usr_join_dt <= #{usrManagementSearch.joinDateEnd}
							]]>
						</if>
						<!-- 끝 날짜만 있는 경우 -->
						<if test="usrManagementSearch.joinDateStart == null and usrManagementSearch.joinDateEnd != null">
							<![CDATA[
							AND usr.usr_join_dt <= #{usrManagementSearch.joinDateEnd}
							]]>
						</if>
					</where>
					)
		<![CDATA[
			WHERE rownum <= #{pager.endRowNo}
			)
		WHERE rnum >= #{pager.startRowNo}
		]]>
    </select>
	
	<update id="updateUsrSttsToNormal" parameterType="String">
		UPDATE usr
		SET usr_stts_no = 'NORMAL'
		WHERE usr_no = #{usrNo}
	</update>
	
	<update id="updateUsrSttsToWithdrawl" parameterType="String">
		UPDATE usr
		SET usr_stts_no = 'WITHDRAWL'
		WHERE usr_no = #{usrNo}
	</update>
</mapper>