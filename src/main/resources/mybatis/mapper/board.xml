<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.finalteam5.otisrm.dao.BoardDao">
	<!-- 공지 등록 폼 -->
	<!-- 공지 등록 작성하기 -->
	<insert id="insertNtc" parameterType="NtcSubmit">
		insert into ntc (ntc_no, usr_no, ntc_ttl, ntc_conts, ntc_wrt_dt, ntc_mdfcn_dt, ntc_inq_cnt, ntc_emrg_yn)
		values((select NVL(MAX(ntc_no)+1,0)from ntc), #{usrNo}, #{ntcTtl}, #{ntcConts}, sysdate, 
		#{ntcMdfcnDt, jdbcType=DATE}, 0, #{ntcEmrgYn} )
	</insert>
	
	<!-- 최근 삽입한 공지사항 PK 불러오기(첨부파일 등록을 위함) -->
	<select id="selectAddNtcPk" resultType="String">
		select ntc_no from (
		  select * from ntc order by ntc_wrt_dt desc
		) where rownum = 1
	</select>
	
	<!-- 공지사항 첨부파일 업로드 -->
	<insert id="insertNtcAtch" parameterType="NtcAtch">
	     insert into ntc_atch(
	        ntc_atch_no, ntc_no, ntc_atch_nm, ntc_atch_mime_type,
	        ntc_atch_data, ntc_atch_size
	    ) values(
	        (select NVL(MAX(ntc_atch_no)+1,0)from ntc_atch), #{ntcNo, jdbcType=VARCHAR}, #{ntcAtchNm, jdbcType=VARCHAR},
	        #{ntcAtchMimeType, jdbcType=VARCHAR}, #{ntcAtchData, jdbcType=BLOB},
	        #{ntcAtchSize, jdbcType=NUMERIC}
	    )
	</insert>
	
	<!-- 공지사항 목록 불러오기: 총 행수 구하기(페이징을 위함) -->
	<select id="countNct" parameterType="Map" resultType="int">
		select count(*) from ntc n
        join usr u on u.usr_no = n.usr_no
	    <if test="keyword != null and keyword != ''">
		  <where>
		    <!-- 키워드 검색 -->
		    <if test="keyword != null and keyword != '' or searchTarget != null and searchTarget != ''">
		    	<if test="searchTarget == 'searchUsrNm'">				    	
		        	REGEXP_REPLACE(LOWER(REPLACE(usr_nm, ' ', '')), '[[:punct:]]', '') LIKE '%' || REGEXP_REPLACE(LOWER(REPLACE(#{keyword}, ' ', '')), '[[:punct:]]', '') || '%'
		    	</if>
		    	<if test="searchTarget == 'searchNctTtl'">				    	
		       		REGEXP_REPLACE(LOWER(REPLACE(nct_ttl, ' ', '')), '[[:punct:]]', '') LIKE '%' || REGEXP_REPLACE(LOWER(REPLACE(#{keyword}, ' ', '')), '[[:punct:]]', '') || '%'
		    	</if>
		    </if>   
		  </where>
		</if>
	</select>
	
	<!-- 공지사항 목록 불러오기 -->
	<select id="selectNtcListByPage" parameterType="Map" resultType="Ntc">
		select rnum, ntc_no, usr_no, ntc_ttl, ntc_conts, ntc_wrt_dt,
		ntc_mdfcn_dt, ntc_inq_cnt, ntc_emrg_yn, usr_nm
		from (
		    select rownum as rnum, ntc_no, usr_no, ntc_ttl, ntc_conts, ntc_wrt_dt,
			ntc_mdfcn_dt, ntc_inq_cnt, ntc_emrg_yn, usr_nm
		    from(
		        select n.ntc_no, n.usr_no, n.ntc_ttl, n.ntc_conts, n.ntc_wrt_dt,
				n.ntc_mdfcn_dt, n.ntc_inq_cnt, ntc_emrg_yn,u.usr_nm
				from ntc n
				join usr u on u.usr_no = n.usr_no
		       <if test="keyword != null and keyword != ''">
				  <where>
				    <!-- 키워드 검색 -->
				    <if test="keyword != null and keyword != '' or searchTarget != null and searchTarget != ''">
				    	<if test="searchTarget == 'searchUsrNo'">				    	
				        	REGEXP_REPLACE(LOWER(REPLACE(usr_nm, ' ', '')), '[[:punct:]]', '') LIKE '%' || REGEXP_REPLACE(LOWER(REPLACE(#{keyword}, ' ', '')), '[[:punct:]]', '') || '%'
				    	</if>
				    	<if test="searchTarget == 'searchNtcTtl'">				    	
				       		REGEXP_REPLACE(LOWER(REPLACE(ntc_ttl, ' ', '')), '[[:punct:]]', '') LIKE '%' || REGEXP_REPLACE(LOWER(REPLACE(#{keyword}, ' ', '')), '[[:punct:]]', '') || '%'
				    	</if>
				    </if>   
				  </where>
				</if>
			    order by ntc_wrt_dt desc
			   )
		<![CDATA[
				where rownum <= #{endRowNo}
			 )
			 where rnum >= #{startRowNo}
		]]>
	</select>
	
	<!-- 공지 상세내용 불러오기 -->	
	<!-- 공지 상세 불러오기-->
	<select id="selectNtcByNtcNo" parameterType="String" resultType="Ntc">
		select n.*, u.usr_nm
		from ntc n
	    join usr u on u.usr_no = n.usr_no
		where n.ntc_no=#{ntcNo}	
	</select>
	
	<!-- 공지 상세에 해당하는 첨부파일 불러오기 -->
	<select id="selectNtcAtchByNtcNo" parameterType="String" resultType="NtcAtch" >
		select * from ntc_atch where ntc_no = #{ntcNo}
	</select>
	
	<!-- 공지첨부파일 번호에 해당하는 첨부파일 불러오기 -->
	<select id="selectNtcAtchByNtcAtchNo" parameterType="String" resultType="NtcAtch">
		select * from ntc_atch where ntc_atch_no = #{ntcAtchNo}
	</select>
	
	<!-- 공지 조회수 업데이트 -->
	<update id="updateNtcInqCnt" parameterType="Ntc">
		update ntc set ntc_inq_cnt = #{ntcInqCnt, jdbcType=INTEGER} 
		where ntc_no = #{ntcNo, jdbcType=VARCHAR}
	</update>
	<!--============================================================================-->
	<!-- 문의 작성하기 -->
	<insert id="insertInq" parameterType="InqSubmit">
		insert into inq (inq_no, usr_no, inq_ttl, inq_conts, inq_wrt_dt, inq_mdfcn_dt, inq_prvt_yn, inq_ans, inq_ans_yn)
		values((select NVL(MAX(inq_no)+1,0)from inq), #{usrNo}, #{inqTtl}, #{inqConts}, sysdate, #{inqMdfcnDt, jdbcType=DATE}, #{inqPrvtYn}, #{inqAns, jdbcType=VARCHAR}, 'N')
	</insert>
	
	<!-- 최근 삽입한 공지사항 PK 불러오기(첨부파일 등록을 위함) -->
	<select id="selectAddInqPk" resultType="String">
		select inq_no from (
		  select * from inq order by inq_wrt_dt desc
		) where rownum = 1
	</select>
	
	<!-- 문의사항 첨부파일 업로드 -->
	<insert id="insertInqAtch" parameterType="InqAtch">
	     insert into inq_atch(
	        inq_atch_no, inq_no, inq_atch_nm, inq_atch_mime_type,
	        inq_atch_data, inq_atch_size
	    ) values(
	        (select NVL(MAX(inq_atch_no)+1,0)from inq_atch), #{inqNo, jdbcType=VARCHAR}, #{inqAtchNm, jdbcType=VARCHAR},
	        #{inqAtchMimeType, jdbcType=VARCHAR}, #{inqAtchData, jdbcType=BLOB},
	        #{inqAtchSize, jdbcType=NUMERIC}
	    )
	</insert>
	
	<!-- 문의게시판 목록 불러오기: 총 행수 구하기(페이징을 위함) -->
	<select id="countInq" parameterType="Map" resultType="int">
		select count(*) from inq i
        join usr u on u.usr_no = i.usr_no
	    <if test="keyword != null and keyword != ''">
		  <where>
		    <!-- 키워드 검색 -->
		    <if test="keyword != null and keyword != '' or searchTarget != null and searchTarget != ''">
		    	<if test="searchTarget == 'searchUsrNm'">				    	
		        	REGEXP_REPLACE(LOWER(REPLACE(usr_nm, ' ', '')), '[[:punct:]]', '') LIKE '%' || REGEXP_REPLACE(LOWER(REPLACE(#{keyword}, ' ', '')), '[[:punct:]]', '') || '%'
		    	</if>
		    	<if test="searchTarget == 'searchInqTtl'">				    	
		       		REGEXP_REPLACE(LOWER(REPLACE(inq_ttl, ' ', '')), '[[:punct:]]', '') LIKE '%' || REGEXP_REPLACE(LOWER(REPLACE(#{keyword}, ' ', '')), '[[:punct:]]', '') || '%'
		    	</if>
		    </if>   
		  </where>
		</if>
	</select>
	
	<!-- 문의사항 목록 불러오기 -->
	<select id="selectInqListByPage" parameterType="Map" resultType="Inq">
		select rnum, inq_no, usr_no, inq_ttl, inq_conts, inq_wrt_dt,
		inq_mdfcn_dt, inq_prvt_yn, inq_ans, inq_ans_yn, usr_nm
		from (
		    select rownum as rnum, inq_no, usr_no, inq_ttl, inq_conts, inq_wrt_dt,
			inq_mdfcn_dt, inq_prvt_yn, inq_ans, inq_ans_yn, usr_nm
		    from(
		       select i.inq_no,i.usr_no, i.inq_ttl, i.inq_conts, i.inq_wrt_dt, i.inq_mdfcn_dt, 
			   i.inq_prvt_yn, i.inq_ans, i.inq_ans_yn, u.usr_nm
			   from inq i
			   join usr u on u.usr_no = i.usr_no
		       <if test="keyword != null and keyword != ''">
				  <where>
				    <!-- 키워드 검색 -->
				    <if test="keyword != null and keyword != '' or searchTarget != null and searchTarget != ''">
				    	<if test="searchTarget == 'searchUsrNo'">				    	
				        	REGEXP_REPLACE(LOWER(REPLACE(usr_nm, ' ', '')), '[[:punct:]]', '') LIKE '%' || REGEXP_REPLACE(LOWER(REPLACE(#{keyword}, ' ', '')), '[[:punct:]]', '') || '%'
				    	</if>
				    	<if test="searchTarget == 'searchInqTtl'">				    	
				       		REGEXP_REPLACE(LOWER(REPLACE(inq_ttl, ' ', '')), '[[:punct:]]', '') LIKE '%' || REGEXP_REPLACE(LOWER(REPLACE(#{keyword}, ' ', '')), '[[:punct:]]', '') || '%'
				    	</if>
				    </if>   
				  </where>
				</if>
			    order by inq_wrt_dt desc
			   )
		<![CDATA[
				where rownum <= #{endRowNo}
			 )
			 where rnum >= #{startRowNo}
		]]>
	</select>
	
	<!-- 문의 상세 불러오기-->
	<select id="selectInqByInqNo" parameterType="String" resultType="Inq">
		select i.*, u.usr_nm
		from inq i
	    join usr u on u.usr_no = i.usr_no
		where i.inq_no=#{inqNo}	
	</select>
	
	<!-- 문의 상세에 해당하는 첨부파일 불러오기 -->
	<select id="selectInqAtchByInqNo" parameterType="String" resultType="InqAtch" >
		select * from inq_atch where inq_no = #{inqNo}
	</select>
	
	<!-- 문의 첨부파일 번호에 해당하는 첨부파일 불러오기 -->
	<select id="selectInqAtchByInqAtchNo" parameterType="String" resultType="InqAtch">
		select * from inq_atch where inq_atch_no = #{inqAtchNo}
	</select>
	
	<!-- 등록한 문의 수정 -->
	<update id="updateInq" parameterType="InqSubmit">
		update inq
		set
		  inq_ttl = COALESCE(#{inqTtl, jdbcType=VARCHAR}, inq_ttl),
		  inq_ans_yn = COALESCE(#{inqAnsYn, jdbcType=VARCHAR}, inq_ans_yn),
		  inq_prvt_yn = COALESCE(#{inqPrvtYn, jdbcType=VARCHAR}, inq_prvt_yn),
		  inq_conts = COALESCE(#{inqAnsConts, jdbcType=VARCHAR}, inq_conts),
		  inq_mdfcn_dt = sysdate
		where inq_no = #{inqNo, jdbcType=VARCHAR}
	</update>
	
	<!-- 문의답변 작성하기 -->
	<insert id="insertInqAns" parameterType="InqAnsSubmit">
		insert into inq_ans (inq_ans_no, inq_no, usr_no, inq_ans_ttl, inq_ans_conts, inq_ans_wrt_dt, inq_ans_mdfcn_dt)
		values((select NVL(MAX(inq_ans_no)+1,0)from inq_ans), #{inqNo}, #{usrNo}, #{inqAnsTtl}, #{inqAnsConts}, sysdate, sysdate)
	</insert>
	
	<!-- 최근 삽입한 답변 PK 불러오기(첨부파일 등록을 위함) -->
	<select id="selectAddInqAnsPk" resultType="String">
		select inq_ans from (
		  select * from inq_ans order by inq_ans_wrt_dt desc
		) where rownum = 1
	</select>
	
	<!-- 문의사항 첨부파일 업로드 -->
	<insert id="insertInqAnsAtch" parameterType="InqAnsAtch">
	     insert into inq_ans_atch(
	        inq_ans_atch_no, inq_ans_no, inq_ans_atch_nm, inq_ans_atch_mime_type,
	        inq_ans_atch_data, inq_ans_atch_size
	    ) values(
	        (select NVL(MAX(inq_atch_no)+1,0)from inq_ans_atch), #{inqAnsNo, jdbcType=VARCHAR}, #{inqAnsAtchNm, jdbcType=VARCHAR},
	        #{inqAnsAtchMimeType, jdbcType=VARCHAR}, #{inqAnsAtchData, jdbcType=BLOB},
	        #{inqAnsAtchSize, jdbcType=NUMERIC}
	    )
	</insert>
	
	<!-- 문의답변 상세 불러오기-->
	<select id="selectInqAnsByInqAnsNo" parameterType="String" resultType="InqAns">
		select i.*, u.usr_nm
		from inq_ans i
	    join usr u on u.usr_no = i.usr_no
		where i.inq_no=#{inqNo}	
	</select>
	
	<!-- 문의 상세에 해당하는 첨부파일 불러오기 -->
	<select id="selectInqAnsAtchByInqAnsNo" parameterType="String" resultType="InqAnsAtch" >
		select * from inq_ans_atch where inq_ans_no = #{inqAnsNo}
	</select>
	
	<!-- 문의 첨부파일 번호에 해당하는 첨부파일 불러오기 -->
	<select id="selectInqAnsAtchByInqAnsAtchNo" parameterType="String" resultType="InqAnsAtch">
		select * from inq_ans_atch where inq_ans_atch_no = #{inqAnsAtchNo}
	</select>
	
</mapper>