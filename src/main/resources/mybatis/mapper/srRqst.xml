<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.finalteam5.otisrm.dao.SrRqstDao">
	<!-- 작성자: 성유진  -->
	
	<!-- sr요청등록 폼 -->
	<!-- 부서번호에 해당하는 관련 시스템 목록 불러오기 -->
	<select id="selectSysByDeptNo" parameterType="String" resultType="Sys">
		select * from sys where dept_no = #{deptNo}
	</select>
	
	<!-- sr요청 등록하기 -->
	<!-- PK는 트리거를 사용해서 null로 지정할  경우 자동으로 정해진 포멧으로 삽입됨 -->
	<insert id="insertSrRqst" parameterType="SrRqstSubmit">
		insert into sr_rqst(
		    sr_rqst_no, sr_ttl, sr_prps, sr_reqstr_no, sr_conts, 
		    sr_rqst_reg_dt, sr_rqst_mdfcn_dt, sr_rqst_stts_no, sys_no, 
		    sr_rqst_emrg_yn, sr_rqst_rvw_rsn, sr_rqst_vld_yn
		) values(
	       null, #{srTtl, jdbcType=VARCHAR}, #{srPrps, jdbcType=VARCHAR}, 
	       #{srReqstrNo , jdbcType=VARCHAR}, #{srConts, jdbcType=VARCHAR},
	       sysdate, #{srRqstMdfcnDt, jdbcType=DATE}, 'RQST', #{sysNo, jdbcType=VARCHAR}, 
	       #{srRqstEmrgYn, jdbcType=VARCHAR}, #{srRqstRvwRsn, jdbcType=VARCHAR}, 'Y'
    	)
	</insert>
	
	<!-- 최근 삽입한 sr요청 불러오기(첨부파일 등록을 위함) -->
	<select id="selectAddSrRqstPk" resultType="String">
		select sr_rqst_no from (
		  select * from sr_rqst order by sr_rqst_reg_dt desc
		) where rownum = 1
	</select>
	
	<!-- sr요청 등록 첨부파일 업로드 -->
	<!-- PK는 트리거를 사용해서 null로 지정할  경우 자동으로 정해진 포멧으로 삽입됨 -->
	<insert id="insertSrRqstAtch" parameterType="SrRqstAtch">
	    insert into sr_rqst_atch(
	        sr_rqst_atch_no, sr_rqst_no, sr_rqst_atch_nm, sr_rqst_atch_mime_type,
	        sr_rqst_atch_data, sr_rqst_atch_size
	    ) values(
	        null, #{srRqstNo, jdbcType=VARCHAR}, #{srRqstAtchNm, jdbcType=VARCHAR},
	        #{srRqstAtchMimeType, jdbcType=VARCHAR}, #{srRqstAtchData, jdbcType=BLOB},
	        #{srRqstAtchSize, jdbcType=NUMERIC}
	    )
	</insert>
	
	<!-- sr요청 불러오기 -->
	<select id="selectSrRqstListByPage" parameterType="Map" resultType="SrRqst">
		select rnum, sr_rqst_no, sr_ttl, sr_reqstr_no, sr_rqst_reg_dt, sr_rqst_mdfcn_dt, dept_no, dept_nm, sr_rqst_stts_seq,
		sr_rqst_stts_no, sys_no, sr_rqst_emrg_yn, sr_rqst_rvw_rsn, sr_rqst_vld_yn, sys_nm, usr_nm, inst_nm, sr_rqst_stts_nm  
		from (
		    select rownum as rnum, sr_rqst_no, sr_ttl, sr_reqstr_no, sr_rqst_reg_dt, sr_rqst_mdfcn_dt, dept_no, dept_nm, sr_rqst_stts_seq,
		    sr_rqst_stts_no, sys_no, sr_rqst_emrg_yn, sr_rqst_rvw_rsn, sr_rqst_vld_yn, sys_nm, usr_nm, inst_nm, sr_rqst_stts_nm  
		    from(
		        select r.sr_rqst_no, r.sr_ttl, r.sr_reqstr_no, r.sr_rqst_reg_dt, r.sr_rqst_mdfcn_dt, r.sr_rqst_stts_no,
				q.sr_rqst_stts_seq, r.sys_no, r.sr_rqst_emrg_yn, r.sr_rqst_rvw_rsn, r.sr_rqst_vld_yn, s.sys_nm, u.usr_nm, u.inst_no, i.inst_nm, q.sr_rqst_stts_nm,
				d.dept_no, d.dept_nm 
				from sr_rqst r
				join sys s on s.sys_no = r.sys_no 
				join usr u on u.usr_no = r.sr_reqstr_no
				join dept d on d.dept_no = u.dept_no 
				join inst i on i.inst_no = u.inst_no
				join sr_rqst_stts q on q.sr_rqst_stts_no = r.sr_rqst_stts_no
		       <if test="status != null and status != '' or usr != null and usr != '' or keyword != null and keyword != '' or startDate != null or endDate != null
		       	or instNo != null and instNo != '' or deptNo != null and deptNo != '' or startDate != null and startDate != '' or endDate != null and endDate != '' or pic != null and pic != ''">
				  <where>
				 
				  	<!-- 소속기관 -->
				    <if test="instNo != null and instNo != ''">
				  		and u.inst_no = #{instNo, jdbcType=VARCHAR}
				  	</if>
				  	<!-- 개발 부서 -->
				  	<if test="deptNo != null and deptNo != ''">
				  		and d.dept_no = #{deptNo, jdbcType=VARCHAR}
				  	</if>
				    <!-- 요청 진행 상태 -->
				    <if test="status != null and status != ''">
				      	and r.sr_rqst_stts_no = #{status, jdbcType=VARCHAR}
				    </if>
				    <!-- 나의 요청 건만 보기 -->
				    <if test="usr != null and usr != ''">
				      	and r.sr_reqstr_no = #{usr, jdbcType=VARCHAR}
				    </if>
				  	
				    <!-- 조회기간 -->
			        <if test="startDate != null and startDate != ''">
			            and r.sr_rqst_reg_dt &gt;= TO_DATE(#{startDate, jdbcType=VARCHAR}, 'yy-MM-dd')
			        </if>
			        <if test="endDate != null and endDate != ''">
			            and r.sr_rqst_reg_dt &lt;= TO_DATE(#{endDate, jdbcType=VARCHAR}, 'yy-MM-dd')
			        </if>
				    
				    <!-- 관련 시스템 -->
				    <if test="sysNo != null and sysNo != ''">
				  		and r.sys_no = #{sysNo, jdbcType=VARCHAR}
				  	</if>
				    
				    <!-- 키워드 검색 -->
				    <if test="keyword != null and keyword != '' or searchTarget != null and searchTarget != ''">
				    	<if test="searchTarget == 'searchSrRqstNo'">				    	
				        	and REGEXP_REPLACE(LOWER(REPLACE(sr_rqst_no, ' ', '')), '[[:punct:]]', '') LIKE '%' || REGEXP_REPLACE(LOWER(REPLACE(#{keyword}, ' ', '')), '[[:punct:]]', '') || '%'
				    	</if>
				    	<if test="searchTarget == 'searchSrRqstNm'">				    	
				       		and REGEXP_REPLACE(LOWER(REPLACE(sr_ttl, ' ', '')), '[[:punct:]]', '') LIKE '%' || REGEXP_REPLACE(LOWER(REPLACE(#{keyword}, ' ', '')), '[[:punct:]]', '') || '%'
				    	</if>
				    </if>
				    
				    and sr_rqst_vld_yn = 'Y' 
				  </where>
				</if>
			    order by sr_rqst_reg_dt desc
			   )
		<![CDATA[
				where rownum <= #{endRowNo}
			 )
			 where rnum >= #{startRowNo}
		]]>
		
	</select>
	
	<!-- 전체 sr요청 수(페이징을 위함) -->
	<select id="countSrRqst" parameterType="Map" resultType="int">
		select count(*) from sr_rqst r
		join sys s on s.sys_no = r.sys_no 
        join usr u on u.usr_no = r.sr_reqstr_no
        join dept d on d.dept_no = u.dept_no 
        join inst i on i.inst_no = u.inst_no
        join sr_rqst_stts q on q.sr_rqst_stts_no = r.sr_rqst_stts_no
	    <if test="status != null and status != '' or usr != null and usr != '' or keyword != null and keyword != '' or startDate != null or endDate != null
	       	or instNo != null and instNo != '' or deptNo != null and deptNo != '' or startDate != null and startDate != '' or endDate != null and endDate != '' or pic != null and pic != ''">
		  <where>
		  	<!-- <if test="pic != null and pic != ''">
 				or (r.sr_reqstr_no = #{pic, jdbcType=VARCHAR})
  				or (r.sr_reqstr_no != #{pic, jdbcType=VARCHAR} and r.sr_rqst_stts_no = 'APRV')
		    </if> -->
		  	<!-- 소속기관 -->
		    <if test="instNo != null and instNo != ''">
		  		and u.inst_no = #{instNo, jdbcType=VARCHAR}
		  	</if>
		  	<!-- 개발 부서 -->
		  	<if test="deptNo != null and deptNo != ''">
		  		and d.dept_no = #{deptNo, jdbcType=VARCHAR}
		  	</if>
		    <!-- 요청 진행 상태 -->
		    <if test="status != null and status != ''">
		      	and r.sr_rqst_stts_no = #{status, jdbcType=VARCHAR}
		    </if>
		    <!-- 나의 요청 건만 보기 -->
		    <if test="usr != null and usr != ''">
		      	and  r.sr_reqstr_no = #{usr, jdbcType=VARCHAR}
		    </if>
		  	
		    <!-- 조회기간 -->
	        <if test="startDate != null and startDate != ''">
	            and r.sr_rqst_reg_dt &gt;= TO_DATE(#{startDate, jdbcType=VARCHAR}, 'yy-MM-dd')
	        </if>
	        <if test="endDate != null and endDate != ''">
	            and r.sr_rqst_reg_dt &lt;= TO_DATE(#{endDate, jdbcType=VARCHAR}, 'yy-MM-dd')
	        </if>
		    
		    <!-- 관련 시스템 -->
		    <if test="sysNo != null and sysNo != ''">
		  		and r.sys_no = #{sysNo, jdbcType=VARCHAR}
		  	</if>
		    
		    <!-- 키워드 검색 -->
		    <if test="keyword != null and keyword != '' or searchTarget != null and searchTarget != ''">
		    	<if test="searchTarget == 'searchSrRqstNo'">				    	
		        	 and REGEXP_REPLACE(LOWER(REPLACE(sr_rqst_no, ' ', '')), '[[:punct:]]', '') LIKE '%' || REGEXP_REPLACE(LOWER(REPLACE(#{keyword}, ' ', '')), '[[:punct:]]', '') || '%'
		    	</if>
		    	<if test="searchTarget == 'searchSrRqstNm'">				    	
		       		and REGEXP_REPLACE(LOWER(REPLACE(sr_ttl, ' ', '')), '[[:punct:]]', '') LIKE '%' || REGEXP_REPLACE(LOWER(REPLACE(#{keyword}, ' ', '')), '[[:punct:]]', '') || '%'
		    	</if>
		    </if>
				     
		    and sr_rqst_vld_yn = 'Y'   
		</where>
	  </if>
	</select>

	<!-- sr요청 상세 불러오기-->
	<select id="selectSrRqstBySrRqstNo" parameterType="String" resultType="SrRqst">
		select r.*, s.sys_nm, u.usr_nm, u.inst_no, i.inst_nm, q.sr_rqst_stts_nm
		from sr_rqst r
		join sys s on s.sys_no = r.sys_no 
		join usr u on u.usr_no = r.sr_reqstr_no
		join inst i on i.inst_no = u.inst_no
		join sr_rqst_stts q on q.sr_rqst_stts_no = r.sr_rqst_stts_no	
		where r.sr_rqst_no=#{srRqstNo, jdbcType=VARCHAR}	
	</select>
	
	<!-- sr요청 상세에 해당하는 첨부파일 불러오기 -->
	<select id="selectSrRqstAtchBySrRqstNo" parameterType="String" resultType="SrRqstAtch" >
		select * from sr_rqst_atch where sr_rqst_no = #{srRqstNo}
	</select>
	
	<!-- sr요청첨부파일 번호에 해당하는 첨부파일 불러오기 -->
	<select id="selectSrRqstAtchBySrRqstAtchNo" parameterType="String" resultType="SrRqstAtch">
		select * from sr_rqst_atch where sr_rqst_atch_no = #{srRqstAtchNo}
	</select>
	
	<!-- 등록한 sr요청 수정 -->
	<update id="updateSrRqst" parameterType="SrRqstSubmit">
		update sr_rqst
		set
		  sr_ttl = COALESCE(#{srTtl, jdbcType=VARCHAR}, sr_ttl),
		  sr_prps = COALESCE(#{srPrps, jdbcType=VARCHAR}, sr_prps),
		  sr_rqst_emrg_yn = COALESCE(#{srRqstEmrgYn, jdbcType=VARCHAR}, sr_rqst_emrg_yn),
		  sr_conts = COALESCE(#{srConts, jdbcType=VARCHAR}, sr_conts),
		  sr_rqst_stts_no = COALESCE(#{srRqstSttsNo, jdbcType=VARCHAR}, sr_rqst_stts_no),
		  sr_rqst_mdfcn_dt = sysdate
		where sr_rqst_no = #{srRqstNo, jdbcType=VARCHAR}
	</update>
	
	<!--sr요청 관리 검색창: sr요청 상태 불러오기 -->
	<select id="selectSrRqstStts" resultType="SrRqstStts">
		select * from sr_rqst_stts order by sr_rqst_stts_seq 
	</select>
	
	<!-- sr요청 삭제하기 -->
	<update id="deleteSrRqst" parameterType="String">
		update sr_rqst set sr_rqst_vld_yn='N' 
		where sr_rqst_stts_no = 'RQST' 
		and sr_rqst_no= #{srRqstNo, jdbcType=VARCHAR}
	</update>
	
	<!-- 담당자홈: 담당자 폼 sr개발정보- 이관기관 가져오기  -->
	<select id="selectInstByOutsrcY" resultType="Inst">
		select * from inst where outsrc_yn = 'Y'
	</select>
	
	<!-- 담당자홈: 담당자 폼 sr개발정보- sr요청구분 가져오기  -->
	<select id="selectSrDmndClsf" resultType="SrDmndClsf">
		select * from sr_dmnd_clsf
	</select>
	
	<!-- 담당자홈: 담당자 폼 sr개발정보- sr업무구분 가져오기     -->
	<select id="selectSrTaskClsf" resultType="SrTaskClsf">
		select * from sr_task_clsf
	</select>
	
	<!-- 담당자홈: srRqstNo에 해당하는 sr 상세 내용 가져오기 -->
	<select id="selectSrBySrRqstNo" parameterType="String" resultType="Sr">
		select sr.*, r.sr_rqst_stts_no,s.sr_rqst_stts_nm, s.sr_rqst_stts_seq, d.sr_dmnd_no
		from sr 
		join sr_rqst r on r.sr_rqst_no = sr.sr_rqst_no 
		join sr_rqst_stts s on s.sr_rqst_stts_no = r.sr_rqst_stts_no
		join sr_trnsf_plan t on t.sr_no = sr.sr_no
		join sr_dmnd_clsf d on d.sr_dmnd_no = t.sr_dmnd_no
		where sr.sr_rqst_no= #{srRqstNo, jdbcType=VARCHAR}
	</select>
	
	<!-- 담당자홈: srRqstNo에 해당하는 sr 상세 내용 가져오기 -->
	<select id="selectSrPrgrsBySrNo" parameterType="String" resultType="SrPrgrs">
		select p.*, r.sr_rqst_no, r.sr_rqst_stts_no, s.sr_rqst_stts_nm, t.sr_prgrs_stts_nm
		from sr_prgrs p 
		join sr on sr.sr_no = p.sr_no
		join sr_rqst r on r.sr_rqst_no = sr.sr_rqst_no 
		join sr_rqst_stts s on s.sr_rqst_stts_no = r.sr_rqst_stts_no
		join sr_prgrs_stts t on t.sr_prgrs_stts_no = p.sr_prgrs_stts_no
		where p.sr_no= #{srNo}
	</select>

	<!--  담당자홈: sr 상세에 해당하는 첨부파일 불러오기 -->
	<select id="selectSrAtchBySrNo" parameterType="String" resultType="SrAtch" >
		select * from sr_atch where sr_no = #{srNo}
	</select>
	
	<!--  담당자홈: sr 첨부파일 번호에 해당하는 첨부파일 불러오기 -->
	<select id="selectSrAtchBySrAtchNo" parameterType="String" resultType="SrAtch">
		select * from sr_atch where sr_atch_no = #{srAtchNo}
	</select>
	
	<!--  담당자홈: sr개발 정보 입력하기 -->
	<!-- PK는 트리거를 사용해서 null로 지정할  경우 자동으로 정해진 포멧으로 삽입됨 -->
	<insert id="insertSr" parameterType="SrSubmit">
		insert into sr (
		    sr_no, sr_rqst_no, pic_usr_no, sr_cmptn_prnmnt_dt, 
		    sr_req_bgt, sr_trnsf_inst_no, sr_pri, sr_dvl_conts, sr_trnsf_yn,
		    sr_reg_dt, sr_mdfcn_dt, sr_vld_yn, sr_task_no
		) values (
		    null, #{srRqstNo, jdbcType=VARCHAR}, #{picUsrNo, jdbcType=VARCHAR},
		    TO_DATE(#{srCmptnPrnmntDt, jdbcType=VARCHAR}, 'yy-MM-dd'), #{srReqBgt},  
		    #{srTrnsfInstNo, jdbcType=VARCHAR}, #{srPri, jdbcType=VARCHAR}, #{srDvlConts, jdbcType=VARCHAR},
		    #{srTrnsfYn, jdbcType=VARCHAR}, sysdate, sysdate, 'Y', #{srTaskNo, jdbcType=VARCHAR}
		)
	</insert>
	
	<!-- 최근 삽입한 sr 불러오기(첨부파일 등록을 위함) -->
	<select id="selectAddSrPk" resultType="String">
		select sr_no from (
		  select * from sr order by sr_reg_dt desc
		) where rownum = 1
	</select>
	
	<!-- sr 등록 첨부파일 업로드 -->
	<!-- PK는 트리거를 사용해서 null로 지정할  경우 자동으로 정해진 포멧으로 삽입됨 -->
	<insert id="insertSrAtch" parameterType="SrAtch">
	    insert into sr_atch(
	        sr_atch_no, sr_no, sr_atch_nm, sr_atch_mime_type,
	        sr_atch_data, sr_atch_size
	    ) values(
	        null, #{srNo, jdbcType=VARCHAR}, #{srAtchNm, jdbcType=VARCHAR},
	        #{srAtchMimeType, jdbcType=VARCHAR}, #{srAtchData, jdbcType=BLOB},
	        #{srAtchSize, jdbcType=NUMERIC}
	    )
	</insert>
	
	<!-- 최근 삽입한 sr중 이관된 경우 불러오기(첨부파일 등록을 위함) -->
	<select id="selectAddSrPkByTrnsf" resultType="String">
		select sr_no from (
	      select * from sr where sr_trnsf_yn = 'Y' order by sr_reg_dt desc
	    ) where rownum = 1
	</select>
	
	<!-- 이관된 sr일 경우 sr이관 계획 등록하기 -->
	<insert id="insertSrTrnsfPlan" parameterType="SrTrnsfPlan">
	    insert into sr_trnsf_plan(
	        sr_no, inst_no, sr_dmnd_no
	    ) values(
	        #{srNo, jdbcType=VARCHAR}, #{instNo, jdbcType=VARCHAR}, #{srDmndNo, jdbcType=VARCHAR}
	    )
	</insert>
	
	<!-- sr 개발계획 수정 -->
	<update id="updateSr" parameterType="SrSubmit">
		update sr
	    set
	        sr_cmptn_prnmnt_dt = COALESCE(TO_DATE(#{srCmptnPrnmntDt, jdbcType=VARCHAR}, 'yy-MM-dd'), sr_cmptn_prnmnt_dt),
	        sr_req_bgt = COALESCE(#{srReqBgt, jdbcType=NUMERIC}, sr_req_bgt),
	        sr_pri = COALESCE(#{srPri, jdbcType=VARCHAR}, sr_pri),
	        sr_dvl_conts = COALESCE(#{srDvlConts, jdbcType=VARCHAR}, sr_dvl_conts),
	        sr_task_no = COALESCE(#{srTaskNo, jdbcType=VARCHAR}, sr_task_no),
	        sr_mdfcn_dt = sysdate
	    where sr_rqst_no = #{srRqstNo, jdbcType=VARCHAR}
	</update>
	
	<!-- 해당 sr 요청에 대한 sr 정보가 있는지 확인하는 쿼리 -->
	<select id="countSrInformationPresent" parameterType="String" resultType="int">
	    select count(*) from sr
	    where sr_rqst_no = #{srRqstNo, jdbcType=VARCHAR}
	</select>
	
	<!-- 처리항목 목록1: 승인 요청 처리할 sr -->
	<select id="selectToDoItemOfAprvRqst" parameterType="Map" resultType="SrRqst">
		select rnum, sr_rqst_no, sr_ttl, sr_reqstr_no, sr_rqst_reg_dt, sr_rqst_mdfcn_dt, dept_no, dept_nm, sr_rqst_stts_seq,
		sr_rqst_stts_no, sys_no, sr_rqst_emrg_yn, sr_rqst_rvw_rsn, sr_rqst_vld_yn, sys_nm, usr_nm, inst_nm, sr_rqst_stts_nm  
		from (
		    select rownum as rnum, sr_rqst_no, sr_ttl, sr_reqstr_no, sr_rqst_reg_dt, sr_rqst_mdfcn_dt, dept_no, dept_nm, sr_rqst_stts_seq,
		    sr_rqst_stts_no, sys_no, sr_rqst_emrg_yn, sr_rqst_rvw_rsn, sr_rqst_vld_yn, sys_nm, usr_nm, inst_nm, sr_rqst_stts_nm  
		    from(
		        select r.sr_rqst_no, r.sr_ttl, r.sr_reqstr_no, r.sr_rqst_reg_dt, r.sr_rqst_mdfcn_dt, r.sr_rqst_stts_no,
				q.sr_rqst_stts_seq, r.sys_no, r.sr_rqst_emrg_yn, r.sr_rqst_rvw_rsn, r.sr_rqst_vld_yn, s.sys_nm, u.usr_nm, u.inst_no, i.inst_nm, q.sr_rqst_stts_nm,
				d.dept_no, d.dept_nm 
				from sr_rqst r
				join sys s on s.sys_no = r.sys_no 
				join usr u on u.usr_no = r.sr_reqstr_no
				join dept d on d.dept_no = u.dept_no 
				join inst i on i.inst_no = u.inst_no
				join sr_rqst_stts q on q.sr_rqst_stts_no = r.sr_rqst_stts_no
		        where r.sr_rqst_stts_no = 'RQST' or r.sr_rqst_stts_no = 'APRV_REEXAM'
				    
				and sr_rqst_vld_yn = 'Y' 
			    order by sr_rqst_reg_dt desc
			   )
		<![CDATA[
				where rownum <= #{endRowNo}
			 )
			 where rnum >= #{startRowNo}
		]]>
		
	</select>
	
	<!-- 처리항목 목록2: 접수 요청 처리할 sr -->
	<select id="selectToDoItemOfRcptRqst" parameterType="Map" resultType="SrRqst">
		select rnum, sr_rqst_no, sr_ttl, sr_reqstr_no, sr_rqst_reg_dt, sr_rqst_mdfcn_dt, dept_no, dept_nm, sr_rqst_stts_seq,
		sr_rqst_stts_no, sys_no, sr_rqst_emrg_yn, sr_rqst_rvw_rsn, sr_rqst_vld_yn, sys_nm, usr_nm, inst_nm, sr_rqst_stts_nm  
		from (
		    select rownum as rnum, sr_rqst_no, sr_ttl, sr_reqstr_no, sr_rqst_reg_dt, sr_rqst_mdfcn_dt, dept_no, dept_nm, sr_rqst_stts_seq,
		    sr_rqst_stts_no, sys_no, sr_rqst_emrg_yn, sr_rqst_rvw_rsn, sr_rqst_vld_yn, sys_nm, usr_nm, inst_nm, sr_rqst_stts_nm  
		    from(
		        select r.sr_rqst_no, r.sr_ttl, r.sr_reqstr_no, r.sr_rqst_reg_dt, r.sr_rqst_mdfcn_dt, r.sr_rqst_stts_no,
				q.sr_rqst_stts_seq, r.sys_no, r.sr_rqst_emrg_yn, r.sr_rqst_rvw_rsn, r.sr_rqst_vld_yn, s.sys_nm, u.usr_nm, u.inst_no, i.inst_nm, q.sr_rqst_stts_nm,
				d.dept_no, d.dept_nm 
				from sr_rqst r
				join sys s on s.sys_no = r.sys_no 
				join usr u on u.usr_no = r.sr_reqstr_no
				join dept d on d.dept_no = u.dept_no 
				join inst i on i.inst_no = u.inst_no
				join sr_rqst_stts q on q.sr_rqst_stts_no = r.sr_rqst_stts_no
		        where r.sr_rqst_stts_no = 'APRV' or r.sr_rqst_stts_no = 'RCPT_REEXAM'
				    
				and sr_rqst_vld_yn = 'Y' 
			    order by sr_rqst_reg_dt desc
			   )
		<![CDATA[
				where rownum <= #{endRowNo}
			 )
			 where rnum >= #{startRowNo}
		]]>
	</select>
	
	<!-- 처리항목 목록3: 접수된 sr -->
	<select id="selectToDoItemOfRcpt" parameterType="Map" resultType="SrRqst">
		select rnum, sr_rqst_no, sr_ttl, sr_reqstr_no, sr_rqst_reg_dt, sr_rqst_mdfcn_dt, dept_no, dept_nm, sr_rqst_stts_seq,
		sr_rqst_stts_no, sys_no, sr_rqst_emrg_yn, sr_rqst_rvw_rsn, sr_rqst_vld_yn, sys_nm, usr_nm, inst_nm, sr_rqst_stts_nm  
		from (
		    select rownum as rnum, sr_rqst_no, sr_ttl, sr_reqstr_no, sr_rqst_reg_dt, sr_rqst_mdfcn_dt, dept_no, dept_nm, sr_rqst_stts_seq,
		    sr_rqst_stts_no, sys_no, sr_rqst_emrg_yn, sr_rqst_rvw_rsn, sr_rqst_vld_yn, sys_nm, usr_nm, inst_nm, sr_rqst_stts_nm  
		    from(
		        select r.sr_rqst_no, r.sr_ttl, r.sr_reqstr_no, r.sr_rqst_reg_dt, r.sr_rqst_mdfcn_dt, r.sr_rqst_stts_no,
				q.sr_rqst_stts_seq, r.sys_no, r.sr_rqst_emrg_yn, r.sr_rqst_rvw_rsn, r.sr_rqst_vld_yn, s.sys_nm, u.usr_nm, u.inst_no, i.inst_nm, q.sr_rqst_stts_nm,
				d.dept_no, d.dept_nm 
				from sr_rqst r
				join sys s on s.sys_no = r.sys_no 
				join usr u on u.usr_no = r.sr_reqstr_no
				join dept d on d.dept_no = u.dept_no 
				join inst i on i.inst_no = u.inst_no
				join sr_rqst_stts q on q.sr_rqst_stts_no = r.sr_rqst_stts_no
		        where r.sr_rqst_stts_no = 'RCPT'    
				and sr_rqst_vld_yn = 'Y' 
			    order by sr_rqst_reg_dt desc
			   )
		<![CDATA[
				where rownum <= #{endRowNo}
			 )
			 where rnum >= #{startRowNo}
		]]>
	</select>
	
	<!-- 처리항목 목록4: 이관된 sr  -->
	<select id="selectToDoItemOfTrnsfY" parameterType="Map" resultType="SrRqst">
		select rnum, sr_rqst_no, sr_ttl, sr_reqstr_no, sr_rqst_reg_dt, sr_rqst_mdfcn_dt, dept_no, dept_nm, sr_rqst_stts_seq,
		sr_rqst_stts_no, sys_no, sr_rqst_emrg_yn, sr_rqst_rvw_rsn, sr_rqst_vld_yn, sys_nm, usr_nm, inst_nm, sr_rqst_stts_nm  
		from (
		    select rownum as rnum, sr_rqst_no, sr_ttl, sr_reqstr_no, sr_rqst_reg_dt, sr_rqst_mdfcn_dt, dept_no, dept_nm, sr_rqst_stts_seq,
		    sr_rqst_stts_no, sys_no, sr_rqst_emrg_yn, sr_rqst_rvw_rsn, sr_rqst_vld_yn, sys_nm, usr_nm, inst_nm, sr_rqst_stts_nm  
		    from(
		        select r.sr_rqst_no, r.sr_ttl, r.sr_reqstr_no, r.sr_rqst_reg_dt, r.sr_rqst_mdfcn_dt, r.sr_rqst_stts_no,
				q.sr_rqst_stts_seq, r.sys_no, r.sr_rqst_emrg_yn, r.sr_rqst_rvw_rsn, r.sr_rqst_vld_yn, s.sys_nm, u.usr_nm, u.inst_no, i.inst_nm, q.sr_rqst_stts_nm,
				d.dept_no, d.dept_nm, sr.sr_no 
				from sr_rqst r
				join sys s on s.sys_no = r.sys_no 
				join usr u on u.usr_no = r.sr_reqstr_no
				join dept d on d.dept_no = u.dept_no 
				join inst i on i.inst_no = u.inst_no
				join sr_rqst_stts q on q.sr_rqst_stts_no = r.sr_rqst_stts_no
				join sr on sr.sr_rqst_no = r.sr_rqst_no
				join sr_prgrs p on p.sr_no = sr.sr_no
				where sr.sr_trnsf_yn = 'Y' 
				and sr_rqst_vld_yn = 'Y' 
			    order by sr_rqst_reg_dt desc
			   )
		<![CDATA[
				where rownum <= #{endRowNo}
			 )
			 where rnum >= #{startRowNo}
		]]>
	</select>
	
	<!-- 처리항목 목록5: 개발 반영요청 -->
	<select id="selectToDoItemOfApplyRqst" parameterType="Map" resultType="SrRqst">
		select rnum, sr_rqst_no, sr_ttl, sr_reqstr_no, sr_rqst_reg_dt, sr_rqst_mdfcn_dt, dept_no, dept_nm, sr_rqst_stts_seq,
		sr_rqst_stts_no, sys_no, sr_rqst_emrg_yn, sr_rqst_rvw_rsn, sr_rqst_vld_yn, sys_nm, usr_nm, inst_nm, sr_rqst_stts_nm  
		from (
		    select rownum as rnum, sr_rqst_no, sr_ttl, sr_reqstr_no, sr_rqst_reg_dt, sr_rqst_mdfcn_dt, dept_no, dept_nm, sr_rqst_stts_seq,
		    sr_rqst_stts_no, sys_no, sr_rqst_emrg_yn, sr_rqst_rvw_rsn, sr_rqst_vld_yn, sys_nm, usr_nm, inst_nm, sr_rqst_stts_nm  
		    from(
		       select r.sr_rqst_no, r.sr_ttl, r.sr_reqstr_no, r.sr_rqst_reg_dt, r.sr_rqst_mdfcn_dt, r.sr_rqst_stts_no,
				q.sr_rqst_stts_seq, r.sys_no, r.sr_rqst_emrg_yn, r.sr_rqst_rvw_rsn, r.sr_rqst_vld_yn, s.sys_nm, u.usr_nm, u.inst_no, i.inst_nm, q.sr_rqst_stts_nm,
				d.dept_no, d.dept_nm, sr.sr_no 
				from sr_rqst r
				join sys s on s.sys_no = r.sys_no 
				join usr u on u.usr_no = r.sr_reqstr_no
				join dept d on d.dept_no = u.dept_no 
				join inst i on i.inst_no = u.inst_no
				join sr_rqst_stts q on q.sr_rqst_stts_no = r.sr_rqst_stts_no
				join sr on sr.sr_rqst_no = r.sr_rqst_no
				join sr_prgrs p on p.sr_no = sr.sr_no
				where p.sr_prgrs_stts_no = 'APPLY_REQUEST'    
				and sr_rqst_vld_yn = 'Y' 
			    order by sr_rqst_reg_dt desc
			   )
		<![CDATA[
				where rownum <= #{endRowNo}
			 )
			 where rnum >= #{startRowNo}
		]]>
	</select>
	
	

	<!-- 작성자: 이현주  -->
	<!-- 상태별 요청수 가져오기 -->
	<select id="countSrRqstBySttsNm" parameterType="String" resultType="int">
		select count(*)
		from sr_rqst r
		join sr_rqst_stts st on st.sr_rqst_stts_no = r.sr_rqst_stts_no
		where #{srRqstSttNm} = '전체' or st.sr_rqst_stts_nm = #{srRqstSttNm}
	</select>
	
	<!-- 검토자 홈 요청목록 불러오기 -->
	<select id="selectSrRqstForReviewerHomeBoardListByPage" parameterType="Map" resultType="com.finalteam5.otisrm.dto.srRequest.SrRqstForReviewerHomeBoard">
		<![CDATA[
		select rnum, sr_rqst_no, sr_ttl, sys_nm, usr_nm, inst_nm, sr_rqst_stts_nm, sr_rqst_reg_dt, sr_cmptn_prnmnt_dt
		from (
		    select rownum as rnum, sr_rqst_no, sr_ttl, sys_nm, usr_nm, inst_nm, sr_rqst_stts_nm, sr_rqst_reg_dt, sr_cmptn_prnmnt_dt
		    from(
		        select r.sr_rqst_no, r.sr_ttl, s.sys_nm, u.usr_nm, i.inst_nm, st.sr_rqst_stts_nm, r.sr_rqst_reg_dt, sr.sr_cmptn_prnmnt_dt
		        from sr_rqst r
		        join sys s on s.sys_no = r.sys_no 
		        join usr u on u.usr_no = r.sr_reqstr_no
		        join inst i on i.inst_no = u.inst_no
		        join sr_rqst_stts st on st.sr_rqst_stts_no = r.sr_rqst_stts_no
		        left join sr on sr.sr_rqst_no = r.sr_rqst_no
		        where #{srRqstSttNm} = '전체' or st.sr_rqst_stts_nm = #{srRqstSttNm}
		        order by sr_rqst_no desc
		        )
			where rownum <= #{endRowNo}
		)
		where rnum >= #{startRowNo}	
		]]>
	</select>

	<!-- 개발관리 검색 조건별 SR개수 가져오기 -->
	<select id="countSrRqstForDevelopManagement" parameterType="Map" resultType="int">
		select count(*)
		from sr_rqst r
		join sys s on s.sys_no = r.sys_no
        join usr u on u.usr_no = r.sr_reqstr_no
        join inst i on i.inst_no = u.inst_no
        join sr_rqst_stts st on st.sr_rqst_stts_no = r.sr_rqst_stts_no
        left join sr on sr.sr_rqst_no = r.sr_rqst_no
        left join usr pic on pic.usr_no = sr.pic_usr_no
		left join dept on dept.dept_no = pic.dept_no
		<where>
			st.sr_rqst_stts_seq >= 4
			
			<if test="status != null and status != '' or usr != null and usr != '' or keyword != null and keyword != '' or startDate != null or endDate != null
		       	or instNo != null and instNo != '' or deptNo != null and deptNo != '' or startDate != null and startDate != '' or endDate != null and endDate != ''
		       	or sysNm != null and sysNm != '' and sysNm != '전체'">
			  	<!-- 조회기간 -->
		        <if test="startDate != null and startDate != ''">
		            and r.sr_rqst_reg_dt &gt;= TO_DATE(#{startDate, jdbcType=VARCHAR}, 'yy-MM-dd')
		        </if>
		        <if test="endDate != null and endDate != ''">
		            and sr.sr_cmptn_prnmnt_dt &lt;= TO_DATE(#{endDate, jdbcType=VARCHAR}, 'yy-MM-dd')
		        </if>
		        
		        <!-- 관련 시스템 -->
			    <if test="sysNm != null and sysNm != '' and sysNm != '전체'">
			  		and s.sys_nm = #{sysNm, jdbcType=VARCHAR}
			  	</if>
			  	
		        <!-- 요청 진행 상태 -->
			    <if test="status != null and status != ''">
			      	and r.sr_rqst_stts_no = #{status, jdbcType=VARCHAR}
			    </if>
			    
			    <!-- 나의 담당 건만 보기 -->
			    <if test="usr != null and usr != ''">
			      	and sr.pic_usr_no = #{usr, jdbcType=VARCHAR}
			    </if>
			    
			  	<!-- 등록자 소속 -->
			    <if test="instNo != null and instNo != ''">
			  		and u.inst_no = #{instNo, jdbcType=VARCHAR}
			  	</if>
			  	
			  	<!-- 개발 부서 -->
			  	<if test="deptNo != null and deptNo != ''">
			  		and pic.dept_no = #{deptNo, jdbcType=VARCHAR}
			  	</if>
			    
			    <!-- 키워드 검색 -->
			    <if test="keyword != null and keyword != '' or searchTarget != null and searchTarget != ''">
			    	<if test="searchTarget == 'searchSrRqstNo'">				    	
			        	and REGEXP_REPLACE(LOWER(REPLACE(r.sr_rqst_no, ' ', '')), '[[:punct:]]', '') LIKE '%' || REGEXP_REPLACE(LOWER(REPLACE(#{keyword}, ' ', '')), '[[:punct:]]', '') || '%'
			    	</if>
			    	<if test="searchTarget == 'searchSrRqstNm'">				    	
			       		and REGEXP_REPLACE(LOWER(REPLACE(r.sr_ttl, ' ', '')), '[[:punct:]]', '') LIKE '%' || REGEXP_REPLACE(LOWER(REPLACE(#{keyword}, ' ', '')), '[[:punct:]]', '') || '%'
			    	</if>
			    </if>
			</if>
		</where>
	</select>	
	
	<!-- 개발관리 목록 가져오기 -->
	<select id="selectSrRqstForDevelopManagementByPage" parameterType="Map" resultType="com.finalteam5.otisrm.dto.srRequest.SrRqstForSearchList">
		select rnum, sr_rqst_no, sr_ttl, sys_nm, usr_nm, inst_nm, sr_rqst_reg_dt, sr_cmptn_prnmnt_dt, sr_rqst_stts_nm, sr_rqst_emrg_yn, sr_rqst_rvw_rsn, sr_trnsf_yn
		from (
		    select rownum as rnum, sr_rqst_no, sr_ttl, sys_nm, usr_nm, inst_nm, sr_rqst_reg_dt, sr_cmptn_prnmnt_dt, sr_rqst_stts_nm, sr_rqst_emrg_yn, sr_rqst_rvw_rsn, sr_trnsf_yn
		    from(
		        select
					r.sr_rqst_no, r.sr_ttl, s.sys_nm, u.usr_nm, i.inst_nm, r.sr_rqst_reg_dt, sr.sr_cmptn_prnmnt_dt, st.sr_rqst_stts_nm, r.sr_rqst_emrg_yn, r.sr_rqst_rvw_rsn, sr.sr_trnsf_yn
				from sr_rqst r
				join sys s on s.sys_no = r.sys_no
		        join usr u on u.usr_no = r.sr_reqstr_no
		        join inst i on i.inst_no = u.inst_no
		        join sr_rqst_stts st on st.sr_rqst_stts_no = r.sr_rqst_stts_no
		        left join sr on sr.sr_rqst_no = r.sr_rqst_no
		        left join usr pic on pic.usr_no = sr.pic_usr_no
				left join dept on dept.dept_no = pic.dept_no
			   <where>
					st.sr_rqst_stts_seq >= 4
					
					<if test="status != null and status != '' or usr != null and usr != '' or keyword != null and keyword != '' or startDate != null or endDate != null
				       	or instNo != null and instNo != '' or deptNo != null and deptNo != '' or startDate != null and startDate != '' or endDate != null and endDate != ''
				       	or sysNm != null and sysNm != '' and sysNm != '전체'">
					  	<!-- 조회기간 -->
				        <if test="startDate != null and startDate != ''">
				            and r.sr_rqst_reg_dt &gt;= TO_DATE(#{startDate, jdbcType=VARCHAR}, 'yy-MM-dd')
				        </if>
				        <if test="endDate != null and endDate != ''">
				            and sr.sr_cmptn_prnmnt_dt &lt;= TO_DATE(#{endDate, jdbcType=VARCHAR}, 'yy-MM-dd')
				        </if>
				        
				        <!-- 관련 시스템 -->
					    <if test="sysNm != null and sysNm != '' and sysNm != '전체'">
					  		and s.sys_nm = #{sysNm, jdbcType=VARCHAR}
					  	</if>
					  	
				        <!-- 요청 진행 상태 -->
					    <if test="status != null and status != ''">
					      	and r.sr_rqst_stts_no = #{status, jdbcType=VARCHAR}
					    </if>
					    
					    <!-- 나의 담당 건만 보기 -->
					    <if test="usr != null and usr != ''">
					      	and sr.pic_usr_no = #{usr, jdbcType=VARCHAR}
					    </if>
					    
					  	<!-- 등록자 소속 -->
					    <if test="instNo != null and instNo != ''">
					  		and u.inst_no = #{instNo, jdbcType=VARCHAR}
					  	</if>
					  	
					  	<!-- 개발 부서 -->
					  	<if test="deptNo != null and deptNo != ''">
					  		and pic.dept_no = #{deptNo, jdbcType=VARCHAR}
					  	</if>
					    
					    <!-- 키워드 검색 -->
					    <if test="keyword != null and keyword != '' or searchTarget != null and searchTarget != ''">
					    	<if test="searchTarget == 'searchSrRqstNo'">				    	
					        	and REGEXP_REPLACE(LOWER(REPLACE(r.sr_rqst_no, ' ', '')), '[[:punct:]]', '') LIKE '%' || REGEXP_REPLACE(LOWER(REPLACE(#{keyword}, ' ', '')), '[[:punct:]]', '') || '%'
					    	</if>
					    	<if test="searchTarget == 'searchSrRqstNm'">				    	
					       		and REGEXP_REPLACE(LOWER(REPLACE(r.sr_ttl, ' ', '')), '[[:punct:]]', '') LIKE '%' || REGEXP_REPLACE(LOWER(REPLACE(#{keyword}, ' ', '')), '[[:punct:]]', '') || '%'
					    	</if>
					    </if>
					</if>
				</where>
				order by sr_rqst_no desc
		<![CDATA[
		        )
			where rownum <= #{endRowNo}
		)
		where rnum >= #{startRowNo}	
		]]>
	</select>
	
	<!-- 검토관리 검색 조건별 SR개수 가져오기 -->
	<select id="countSrRqstForReviewManagement" parameterType="Map" resultType="int">
		select count(*)
		from sr_rqst r
		join sys s on s.sys_no = r.sys_no
        join usr u on u.usr_no = r.sr_reqstr_no
        join inst i on i.inst_no = u.inst_no
        join sr_rqst_stts st on st.sr_rqst_stts_no = r.sr_rqst_stts_no
        left join sr on sr.sr_rqst_no = r.sr_rqst_no
        left join usr pic on pic.usr_no = sr.pic_usr_no
		left join dept on dept.dept_no = pic.dept_no
	    <if test="status != null and status != '' or usr != null and usr != '' or keyword != null and keyword != '' or startDate != null or endDate != null
	       	or instNo != null and instNo != '' or deptNo != null and deptNo != '' or startDate != null and startDate != '' or endDate != null and endDate != ''
	       	or sysNm != null and sysNm != '' and sysNm != '전체'">
		  <where>
		  	<!-- 조회기간 -->
	        <if test="startDate != null and startDate != ''">
	            and r.sr_rqst_reg_dt &gt;= TO_DATE(#{startDate, jdbcType=VARCHAR}, 'yy-MM-dd')
	        </if>
	        <if test="endDate != null and endDate != ''">
	            and sr.sr_cmptn_prnmnt_dt &lt;= TO_DATE(#{endDate, jdbcType=VARCHAR}, 'yy-MM-dd')
	        </if>
	        
	        <!-- 관련 시스템 -->
		    <if test="sysNm != null and sysNm != '' and sysNm != '전체'">
		  		and s.sys_nm = #{sysNm, jdbcType=VARCHAR}
		  	</if>
		  	
	        <!-- 요청 진행 상태 -->
		    <if test="status != null and status != ''">
		      	and r.sr_rqst_stts_no = #{status, jdbcType=VARCHAR}
		    </if>

		  	<!-- 등록자 소속 -->
		    <if test="instNo != null and instNo != ''">
		  		and u.inst_no = #{instNo, jdbcType=VARCHAR}
		  	</if>
		  	
		  	<!-- 개발 부서 -->
		  	<if test="deptNo != null and deptNo != ''">
		  		and pic.dept_no = #{deptNo, jdbcType=VARCHAR}
		  	</if>
		    
		    <!-- 키워드 검색 -->
		    <if test="keyword != null and keyword != '' or searchTarget != null and searchTarget != ''">
		    	<if test="searchTarget == 'searchSrRqstNo'">				    	
		        	and REGEXP_REPLACE(LOWER(REPLACE(r.sr_rqst_no, ' ', '')), '[[:punct:]]', '') LIKE '%' || REGEXP_REPLACE(LOWER(REPLACE(#{keyword}, ' ', '')), '[[:punct:]]', '') || '%'
		    	</if>
		    	<if test="searchTarget == 'searchSrRqstNm'">				    	
		       		and REGEXP_REPLACE(LOWER(REPLACE(r.sr_ttl, ' ', '')), '[[:punct:]]', '') LIKE '%' || REGEXP_REPLACE(LOWER(REPLACE(#{keyword}, ' ', '')), '[[:punct:]]', '') || '%'
		    	</if>
		    </if>
		  </where>
		</if>
	</select>
	
	<!-- 검토관리 목록 가져오기 -->
	<select id="selectSrRqstForReviewManagementByPage" parameterType="Map" resultType="com.finalteam5.otisrm.dto.srRequest.SrRqstForSearchList">
		select rnum, sr_rqst_no, sr_ttl, sys_nm, usr_nm, inst_nm, sr_rqst_reg_dt, sr_cmptn_prnmnt_dt, sr_rqst_stts_nm, sr_rqst_emrg_yn, sr_rqst_rvw_rsn, sr_trnsf_yn
		from (
		    select rownum as rnum, sr_rqst_no, sr_ttl, sys_nm, usr_nm, inst_nm, sr_rqst_reg_dt, sr_cmptn_prnmnt_dt, sr_rqst_stts_nm, sr_rqst_emrg_yn, sr_rqst_rvw_rsn, sr_trnsf_yn
		    from(
		        select
					r.sr_rqst_no, r.sr_ttl, s.sys_nm, u.usr_nm, i.inst_nm, r.sr_rqst_reg_dt, sr.sr_cmptn_prnmnt_dt, st.sr_rqst_stts_nm, r.sr_rqst_emrg_yn, r.sr_rqst_rvw_rsn, sr.sr_trnsf_yn
				from sr_rqst r
				join sys s on s.sys_no = r.sys_no
		        join usr u on u.usr_no = r.sr_reqstr_no
		        join inst i on i.inst_no = u.inst_no
		        join sr_rqst_stts st on st.sr_rqst_stts_no = r.sr_rqst_stts_no
		        left join sr on sr.sr_rqst_no = r.sr_rqst_no
		        left join usr pic on pic.usr_no = sr.pic_usr_no
				left join dept on dept.dept_no = pic.dept_no
			   <if test="status != null and status != '' or usr != null and usr != '' or keyword != null and keyword != '' or startDate != null or endDate != null
			       	or instNo != null and instNo != '' or deptNo != null and deptNo != '' or startDate != null and startDate != '' or endDate != null and endDate != ''
			       	or sysNm != null and sysNm != '' and sysNm != '전체'">
				  <where>
				  	<!-- 조회기간 -->
			        <if test="startDate != null and startDate != ''">
			            and r.sr_rqst_reg_dt &gt;= TO_DATE(#{startDate, jdbcType=VARCHAR}, 'yy-MM-dd')
			        </if>
			        <if test="endDate != null and endDate != ''">
			            and sr.sr_cmptn_prnmnt_dt &lt;= TO_DATE(#{endDate, jdbcType=VARCHAR}, 'yy-MM-dd')
			        </if>
			        
			        <!-- 관련 시스템 -->
				    <if test="sysNm != null and sysNm != '' and sysNm != '전체'">
				  		and s.sys_nm = #{sysNm, jdbcType=VARCHAR}
				  	</if>
				  	
			        <!-- 요청 진행 상태 -->
				    <if test="status != null and status != ''">
				      	and r.sr_rqst_stts_no = #{status, jdbcType=VARCHAR}
				    </if>
				    
				    <!-- 나의 담당 건만 보기 -->
				    <if test="usr != null and usr != ''">
				      	and sr.pic_usr_no = #{usr, jdbcType=VARCHAR}
				    </if>
				    
				  	<!-- 등록자 소속 -->
				    <if test="instNo != null and instNo != ''">
				  		and u.inst_no = #{instNo, jdbcType=VARCHAR}
				  	</if>
				  	
				  	<!-- 개발 부서 -->
				  	<if test="deptNo != null and deptNo != ''">
				  		and pic.dept_no = #{deptNo, jdbcType=VARCHAR}
				  	</if>
				    
				    <!-- 키워드 검색 -->
				    <if test="keyword != null and keyword != '' or searchTarget != null and searchTarget != ''">
				    	<if test="searchTarget == 'searchSrRqstNo'">				    	
				        	and REGEXP_REPLACE(LOWER(REPLACE(r.sr_rqst_no, ' ', '')), '[[:punct:]]', '') LIKE '%' || REGEXP_REPLACE(LOWER(REPLACE(#{keyword}, ' ', '')), '[[:punct:]]', '') || '%'
				    	</if>
				    	<if test="searchTarget == 'searchSrRqstNm'">				    	
				       		and REGEXP_REPLACE(LOWER(REPLACE(r.sr_ttl, ' ', '')), '[[:punct:]]', '') LIKE '%' || REGEXP_REPLACE(LOWER(REPLACE(#{keyword}, ' ', '')), '[[:punct:]]', '') || '%'
				    	</if>
				    </if>
				  </where>
				</if>
				order by sr_rqst_no desc
		<![CDATA[
		        )
			where rownum <= #{endRowNo}
		)
		where rnum >= #{startRowNo}	
		]]>
	</select>
	
	<!-- 검토자 상세모달로 SR정보 가져오기 -->
	<select id="selectSrRqstForReviewerModal" parameterType="String" resultType="com.finalteam5.otisrm.dto.srRequest.SrRqstForReviewerModal">
		select 
		    r.sr_rqst_no,
		    r.sr_rqst_stts_no,
		    reqstr.usr_nm as sr_reqstr_nm,
		    reqstr_inst.inst_nm as reqstr_inst_nm,
		    r.sr_rqst_reg_dt,
		    sys.sys_nm,
		    r.sr_ttl,
		    r.sr_conts,
		    r.sr_rqst_rvw_rsn,
		    pic.usr_nm as sr_pic_usr_nm,
		    sr.sr_trnsf_yn,
		    trnsf_inst.inst_nm as sr_trnsf_inst_nm,
		    stc.sr_task_nm,
		    sr.sr_req_bgt,
		    sdc.sr_dmnd_nm,
		    sr.sr_pri,	
		    sr.sr_cmptn_prnmnt_dt,
		    sr.sr_dvl_conts
		from sr_rqst r
		join sys on r.sys_no = sys.sys_no
		join usr reqstr on r.sr_reqstr_no = reqstr.usr_no
		join inst reqstr_inst on reqstr.inst_no = reqstr_inst.inst_no
		left join sr on r.sr_rqst_no = sr.sr_rqst_no
		left join usr pic on pic.usr_no = sr.pic_usr_no 
		left join inst trnsf_inst on trnsf_inst.inst_no = sr.sr_trnsf_inst_no
		left join sr_task_clsf stc on stc.sr_task_no = sr.sr_task_no
		left join sr_trnsf_plan stp on stp.sr_no = sr.sr_no
		left join sr_dmnd_clsf sdc on sdc.sr_dmnd_no = stp.sr_dmnd_no
		where r.sr_rqst_no = #{selectedSrRqstNo}
	</select>
	
	<!-- 검토자 홈 진행현황으로 SR정보 가져오기 -->
	<select id="selectSrRqstForReviewerHomeProgress" parameterType="String" resultType="com.finalteam5.otisrm.dto.srRequest.SrRqstForReviewerHomeProgress">
		select 
		    r.sr_rqst_no,
		    st.sr_rqst_stts_nm,
		    reqstr.usr_nm as sr_reqstr_nm,
		    r.sr_rqst_reg_dt,
		    sr.sr_trnsf_yn,
		    dept.dept_nm,
		    trnsf_inst.inst_nm as sr_trnsf_inst_nm,
		    sr.sr_cmptn_prnmnt_dt,
		    r.sr_ttl,
		    r.sr_conts,
		    r.sr_rqst_rvw_rsn
		from sr_rqst r
		join sys on r.sys_no = sys.sys_no
		join sr_rqst_stts st on r.sr_rqst_stts_no = st.sr_rqst_stts_no
		join usr reqstr on r.sr_reqstr_no = reqstr.usr_no
		left join sr on r.sr_rqst_no = sr.sr_rqst_no
		left join inst trnsf_inst on trnsf_inst.inst_no = sr.sr_trnsf_inst_no
		left join usr pic on pic.usr_no = sr.pic_usr_no
		left join dept on dept.dept_no = pic.dept_no
		where r.sr_rqst_no = #{selectedSrRqstNo}
	</select>
	
	<!-- 진행상태 업데이트 -->
	<update id="updateSrRqstStts" parameterType="map">
		update sr_rqst set sr_rqst_stts_no = #{srRqstSttsNo}
		where sr_rqst_no = #{selectedSrRqstNo}
	</update>
	
	<!-- 검토의견 업데이트 -->
	<update id="updateSrRqstRvwRsn" parameterType="map">
		update sr_rqst set sr_rqst_rvw_rsn = #{srRqstRvwRsn}
		where sr_rqst_no = #{selectedSrRqstNo}
	</update>
	
	<!-- 전체 시스템명 가져오기 -->
	<select id="selectTotalSysNm" resultType="String">
		select distinct sys_nm from sys
	</select>
</mapper>